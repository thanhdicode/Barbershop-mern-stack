components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [user, admin]
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        name: fake name
        role: user

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Barber:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        title:
          type: string
        image:
          type: string
          format: uri
        selectedUserId:
          type: string
        role:
          type: string
          enum: [user, barber]
      example:
        id: '6943'
        firstName: John
        lastName: Doe
        title: Master Barber
        image: https://www.keydesign-themes.com/etalon/barber/wp-content/uploads/sites/26/2020/12/barber1.jpg
        selectedUserId: '6943'
        role: barber

    ServiceCategory:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      example:
        id: 7753
        name: Haircuts

    Service:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        price:
          type: number
        description:
          type: string
        category:
          type: string
      example:
        id: 2a58
        title: Classic Haircut
        price: 15
        description: A timeless haircut that suits all occasions, providing a clean and polished look.
        category: 7753

    Appointment:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        contactNumber:
          type: string
        email:
          type: string
          format: email
        preferredHairdresser:
          type: string
          description: ID of the preferred hairdresser (Barber ID)
        serviceCategory:
          type: string
          description: ID of the service category
        serviceType:
          type: string
          description: ID of the service type
        appointmentDateTime:
          type: string
          format: date-time
        additionalNotes:
          type: string
        userId:
          type: string
          description: ID of the user who booked the appointment
        status:
          type: string
          enum: [Upcoming, Past, Cancelled]
      example:
        id: dc42
        firstName: Stefan
        lastName: Gogov
        contactNumber: '0894703251'
        email: splay333@gmail.com
        preferredHairdresser: '5596'
        serviceCategory: '7753'
        serviceType: '06e0'
        appointmentDateTime: '2024-08-21T12:00:07.199Z'
        additionalNotes: ''
        userId: '8690'
        status: Upcoming

    Review:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
          description: ID of the user who left the review
        name:
          type: string
        barberId:
          type: string
          description: ID of the barber the review is about
        serviceType:
          type: string
          description: ID of the service type the review is for
        appointmentDateTime:
          type: string
          format: date-time
        date:
          type: string
          format: date-time
          description: Date the review was created
        appointmentId:
          type: string
          description: ID of the related appointment
        rating:
          type: integer
          minimum: 1
          maximum: 5
        title:
          type: string
        text:
          type: string
      example:
        id: 'c834'
        userId: '8690'
        name: 'Стефан Гогов'
        barberId: '6943'
        serviceType: '049c'
        appointmentDateTime: '2024-08-19T09:00:49.054Z'
        date: '2024-08-20T08:07:37.767Z'
        appointmentId: 'ed49'
        rating: 3
        title: 'Great Experience'
        text: 'The haircut was good, but could be better.'

    Status:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          enum: [Upcoming, Past, Cancelled]
      example:
        id: '1'
        name: Upcoming

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate

    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden

    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Invalid input

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
